{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/content/components/content.component.ts","webpack:///src/app/content/components/content.component.html","webpack:///src/app/content/services/data/data-service.ts","webpack:///src/app/content/services/mailing/mailing-service.ts","webpack:///src/app/deaths.pipe.ts","webpack:///src/app/filter-country.pipe.ts","webpack:///src/app/filter-dec.pipe.ts","webpack:///src/app/filter-inc.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContentComponent","service","mailingService","dataSet","newCases","newDeaths","totalCases","totalDeaths","totalRecovered","totalActiveCases","x","Math","floor","email","test","validateEmail","message","addEmail","getData","subscribe","v","val","country_name","push","new_cases","replace","parseInt","new_deaths","cases","deaths","total_recovered","active_cases","console","log","DataService","create","observer","myHeaders","Headers","myRequest","Request","method","headers","mode","cache","fetch","response","json","data","next","countries_stat","complete","err","providedIn","MailingService","DeathsPipe","items","sort","a","b","name","FilterCountryPipe","filter","item","toLowerCase","includes","FilterDecPipe","FilterIncPipe","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: []\n})\nexport class AppComponent {\n  title = 'covid';\n}\n","<app-content></app-content>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/components/content.component';\nimport { FilterCountryPipe } from './filter-country.pipe';\nimport { FilterIncPipe } from './filter-inc.pipe';\nimport { DeathsPipe } from './deaths.pipe';\nimport { FilterDecPipe } from './filter-dec.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    FilterCountryPipe,\n    FilterIncPipe,\n    DeathsPipe,\n    FilterDecPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data/data-service'\nimport { MailingService } from '../services/mailing/mailing-service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css','bootstrap.min.css']\n})\nexport class ContentComponent implements OnInit {\n\n  public dataSet: any=[];\n  public country: string;\n  public selection: string;\n  public selection2: string;\n  public newCases: number=0;\n  public newDeaths: number=0;\n  public totalCases: number=0;\n  public totalDeaths: number=0;\n  public totalRecovered: number=0;\n  public totalActiveCases: number=0;\n\n  public message: string;\n  public email: string;\n\n  public floor(x: number): number{\n    return Math.floor(x);\n  }\n\n  public validateEmail(email: string){\n    return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email));\n  }\n\n  public addEmail(){\n    if(!this.validateEmail(this.email)){\n      this.message=\"Your email address is not valid !\";\n    }else{\n      //addingEmail\n      this.mailingService.addEmail(this.email);\n      this.message=\"email \"+this.email+\" added successfully !\";\n      this.email=\"\";\n    }\n  }\n\n  constructor(private service: DataService, private mailingService: MailingService) { \n \n  }\n\n  ngOnInit(): void {\n    this.service.getData().subscribe(v => {\n      for(let val in v){\n        if(v[val].country_name!==\"\")this.dataSet.push(v[val]); \n        this.newCases+=v[val].new_cases.replace(\",\",\"\").replace(\",\",\"\")===\"N/A\"?0:parseInt(v[val].new_cases.replace(\",\",\"\").replace(\",\",\"\"));\n        this.newDeaths+=v[val].new_deaths.replace(\",\",\"\").replace(\",\",\"\")===\"N/A\"?0:parseInt(v[val].new_deaths.replace(\",\",\"\").replace(\",\",\"\"));\n        this.totalCases+=v[val].cases.replace(\",\",\"\").replace(\",\",\"\")===\"N/A\"?0:parseInt(v[val].cases.replace(\",\",\"\").replace(\",\",\"\").replace(\",\",\"\"));\n        this.totalDeaths+=v[val].deaths.replace(\",\",\"\").replace(\",\",\"\")===\"N/A\"?0:parseInt(v[val].deaths.replace(\",\",\"\").replace(\",\",\"\").replace(\",\",\"\"));\n        this.totalRecovered+=v[val].total_recovered.replace(\",\",\"\").replace(\",\",\"\")===\"N/A\"?0:parseInt(v[val].total_recovered.replace(\",\",\"\").replace(\",\",\"\"));\n        this.totalActiveCases+=v[val].active_cases.replace(\",\",\"\").replace(\",\",\"\")===\"N/A\"?0:parseInt(v[val].active_cases.replace(\",\",\"\").replace(\",\",\"\"));\n      } \n    });\n    console.log(this.dataSet);\n  }\n\n}\n"," <!-- Navigation -->\n <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">Covid-19 Real time statistics</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </div>\n</nav>\n\n<!-- Page Content -->\n<div class=\"container w-100\" style=\"min-width:90%\">\n  <!-- Heading Row -->\n  <div class=\"row align-items-center my-5\">\n    <!-- /.col-lg-8 -->\n    <div class=\"col-lg-4\">\n      <img class=\"img-fluid rounded mb-4 mb-lg-0\" src=\"https://covid19.columbia.edu/sites/default/files/styles/cu_crop/public/content/covid-19/covid-19%20virus.jpeg?itok=OTa0CIKc\" alt=\"\">\n    </div>\n    <div class=\"col-lg-5\">\n        <div class=\"form-group\">\n          <br>\n          <label for=\"exampleInputEmail1\">Subscribe to receive news every hour</label>\n          <input type=\"email\" [(ngModel)]=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          <div>\n            <span style=\"color:red\" *ngIf=\"message=='Your email address is not valid !'\"><em>{{message}}</em></span>\n            <span style=\"color:green\" *ngIf=\"message!='Well done!'\"><em>{{message}}</em></span>\n          </div>\n        </div>\n        <button type=\"submit\" (click)=\"addEmail()\" class=\"btn btn-primary\">Submit</button>\n      \n    <!-- /.col-md-4 -->\n  </div>\n  \n  <!-- /.row -->\n\n  <!-- Content Row -->\n  <div class=\"row\">\n    \n    <br>\n    <hr>\n    \n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th scope=\"col\">New Cases</th>\n            <th scope=\"col\">New Deaths</th>\n            <th scope=\"col\">Total Cases</th>\n            <th scope=\"col\">Total Active Cases</th>\n            <th scope=\"col\">Total Deaths</th>\n            <th scope=\"col\">Total Recovered</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td data-label=\"New Cases\" ><strong style=\"color:green\"> {{newCases}}</strong></td>\n            <td data-label=\"New Deaths\" ><strong style=\"color:red\">  {{newDeaths}}</strong></td>\n            <td data-label=\"Total Cases\" ><strong style=\"color:blue\">  {{totalCases}}</strong></td>\n            <td data-label=\"Total Active Cases\" ><strong style=\"color:rgb(128, 112, 128)\">  {{totalActiveCases}}</strong></td>\n            <td data-label=\"Total Deaths\" ><strong style=\"color:grey\">  {{totalDeaths}}</strong></td>\n            <td data-label=\"Total Recovered\" ><strong style=\"color:tomato\"> {{totalRecovered}}</strong></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div>\n      <table>\n        <tr>\n          <td>\n            <p>Filter by country : <input class=\"form-control\" [(ngModel)]=\"country\" /></p>\n          </td>\n          <td>\n            <p>\n              Filter increasing : <select class=\"form-control\" name=\"selection\" [(ngModel)]=\"selection\">\n                  <option value=\"confirmed\">Filter by increasing confirmed cases :</option>\n                  <option value=\"deaths\">Filter by increasing deaths :</option>\n                  <option value=\"recovered\">Filter by increasing recovered :</option>\n              </select>\n            </p>\n          </td>\n          <td>\n            <p>\n              Filter decreasing : <select class=\"form-control\" name=\"selection2\" [(ngModel)]=\"selection2\">\n                  <option value=\"confirmed\">Filter by decreasing confirmed cases :</option>\n                  <option value=\"deaths\">Filter by decreasing deaths :</option>\n                  <option value=\"recovered\">Filter by decreasing recovered :</option>\n              </select>\n            </p>   \n          </td>\n        </tr>\n      </table>\n      \n      \n  </div>\n\n    <table>\n  \n\n      <thead>\n        <tr>\n          <th scope=\"col\">Country</th>\n          <th scope=\"col\">Confirmed</th>\n          <th scope=\"col\">Active Cases</th>\n          <th scope=\"col\">Deaths</th>\n          <th scope=\"col\">Recovered</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of dataSet | filterCountry : country | filterInc : selection | filterDec : selection2\">\n          <td data-label=\"Country\">{{data.country_name}}</td>\n\n          <td  data-label=\"Confirmed\">{{data.cases}}<span style=\"color:red\"> (+{{data.new_cases}})</span><span style=\"color:violet\"> ({{floor(data.cases.replace(\",\",\"\").replace(\",\",\"\")*100/totalCases*100)/100}}% of total cases)</span></td>\n          \n          <td  data-label=\"Active Cases\">{{data.active_cases}}<span style=\"color:violet\"> ({{floor(data.active_cases.replace(\",\",\"\").replace(\",\",\"\")*100/totalActiveCases*100)/100}}% of total active cases)</span></td>\n  \n          <td  data-label=\"Deaths\">{{data.deaths}}<span style=\"color: red\"> (+{{data.new_deaths}})</span><span style=\"color:violet\"> ({{floor(data.deaths.replace(\",\",\"\").replace(\",\",\"\")*100/totalDeaths*100)/100}}% of total deaths)</span></td>\n  \n          <td  data-label=\"Recovered\">{{data.total_recovered}} <span style=\"color:teal\"> ({{floor(data.total_recovered.replace(\",\",\"\")*100/data.cases.replace(\",\",\"\").replace(\",\",\"\")*100)/100}}% of confirmed cases)</span></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <!-- /.row -->\n\n</div>\n<!-- /.container -->\n\n<!-- Footer -->\n<footer class=\"py-3 bg-dark fixed-bottom\">\n  <div class=\"container\">\n    <p class=\"m-0 text-center text-white\"><em>Made with patience by <a style=\"text-decoration:none; color:#dddddd\" href=\"https://www.linkedin.com/in/zakaria-maaraki/\"><strong>Maaraki Zakaria</strong></a></em></p>\n  </div>\n  <!-- /.container -->\n</footer>\n\n  \n\n\n<style>\n    body {\n\n  font-family: \"Open Sans\", sans-serif;\n  line-height: 1.25;\n}\n\ntable {\n  border: 1px solid #ccc;\n  border-collapse: collapse;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  table-layout: fixed;\n}\n\ntable caption {\n  font-size: 1.5em;\n  margin: .5em 0 .75em;\n}\n\ntable tr {\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n  padding: .35em;\n}\n\ntable th,\ntable td {\n  padding: .625em;\n  text-align: center;\n}\n\ntable th {\n  font-size: .85em;\n  letter-spacing: .1em;\n  text-transform: uppercase;\n}\n\n@media screen and (max-width: 600px) {\n  table {\n    border: 0;\n  }\n\n  table caption {\n    font-size: 1.3em;\n  }\n  \n  table thead {\n    border: none;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n  \n  table tr {\n    border-bottom: 3px solid #ddd;\n    display: block;\n    margin-bottom: .625em;\n  }\n  \n  table td {\n    border-bottom: 1px solid #ddd;\n    display: block;\n    font-size: .8em;\n    text-align: right;\n  }\n  \n  table td::before {\n    /*\n    * aria-label has no advantage, it won't be read inside a table\n    content: attr(aria-label);\n    */\n    content: attr(data-label);\n    float: left;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n  \n  table td:last-child {\n    border-bottom: 0;\n  }\n}\n\n</style>\n\n\n \n\n\n","import { Injectable } from '@angular/core';\nimport {Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n\n  public getData(): Observable<any>{\n    \n    return Observable.create(observer=>{\n      let myHeaders = new Headers({\n        \"Content-Type\": \"text/plain\",\n        \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"6356e62fc7msh27272757a761a13p18e27cjsn8d58dbbf0f26\",\n      });\n      \n      \n      let myRequest = new Request('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n        { method: 'GET',\n          headers: myHeaders,\n          mode: 'cors',\n          cache: 'default'\n        }\n      );\n\n      \n      fetch(myRequest)\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(data);\n        observer.next(data.countries_stat);\n        observer.complete();\n      })\n      .catch(function(err) {\n        // Error :(\n      });\n    });\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailingService {\n\n  constructor() {}\n\n  public addEmail(email: string){\n    fetch('http://ec2-18-222-10-165.us-east-2.compute.amazonaws.com/api/addUser?email='+email, {\n        mode: 'no-cors',\n        method:'GET',\n        headers: {\n        'Accept': '*/*',\n        }\n      });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'deaths'\n})\nexport class DeathsPipe implements PipeTransform {\n\n  transform(items: any[], deaths: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    items.sort((a,b)=>a.deaths-b.deaths);\n    return items;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterCountry'\n})\nexport class FilterCountryPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items || !filter) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    return items.filter(item => {return item.country_name.toLowerCase().includes(filter.toLowerCase())});\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterDec'\n})\nexport class FilterDecPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    if(filter===\"confirmed\")items.sort((b,a)=>parseInt(a.cases.replace(\",\",\"\"))-parseInt(b.cases.replace(\",\",\"\")));\n    else if(filter===\"deaths\")items.sort((b,a)=>parseInt(a.deaths.replace(\",\",\"\"))-parseInt(b.deaths.replace(\",\",\"\")));\n    else items.sort((b,a)=>parseInt(a.total_recovered.replace(\",\",\"\"))-parseInt(b.total_recovered.replace(\",\",\"\")));\n    return items;\n  }   \n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterInc'\n})\nexport class FilterIncPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    if(filter===\"confirmed\")items.sort((a,b)=>parseInt(a.cases.replace(\",\",\"\"))-parseInt(b.cases.replace(\",\",\"\")));\n    else if(filter===\"deaths\")items.sort((a,b)=>parseInt(a.deaths.replace(\",\",\"\"))-parseInt(b.deaths.replace(\",\",\"\")));\n    else items.sort((a,b)=>parseInt(a.total_recovered.replace(\",\",\"\"))-parseInt(b.total_recovered.replace(\",\",\"\")));\n    return items;\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}