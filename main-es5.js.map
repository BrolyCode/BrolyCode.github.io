{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/content/components/content.component.ts","webpack:///src/app/content/components/content.component.html","webpack:///src/app/content/services/data/data-service.ts","webpack:///src/app/content/services/mailing/mailing-service.ts","webpack:///src/app/deaths.pipe.ts","webpack:///src/app/filter-country.pipe.ts","webpack:///src/app/filter-dec.pipe.ts","webpack:///src/app/filter-inc.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContentComponent","service","mailingService","dataSet","newCases","newDeaths","totalCases","totalDeaths","totalRecovered","totalActiveCases","x","Math","floor","email","test","validateEmail","message","addEmail","getData","subscribe","v","val","country_name","push","new_cases","split","join","parseInt","new_deaths","cases","deaths","total_recovered","active_cases","DataService","create","observer","myHeaders","Headers","myRequest","Request","method","headers","mode","cache","fetch","response","json","data","console","log","next","countries_stat","complete","err","providedIn","MailingService","DeathsPipe","items","sort","a","b","name","FilterCountryPipe","filter","item","toLowerCase","includes","FilterDecPipe","FilterIncPipe","replace","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: []\n})\nexport class AppComponent {\n  title = 'covid';\n}\n","<app-content></app-content>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/components/content.component';\nimport { FilterCountryPipe } from './filter-country.pipe';\nimport { FilterIncPipe } from './filter-inc.pipe';\nimport { DeathsPipe } from './deaths.pipe';\nimport { FilterDecPipe } from './filter-dec.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    FilterCountryPipe,\n    FilterIncPipe,\n    DeathsPipe,\n    FilterDecPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../services/data/data-service\";\nimport { MailingService } from \"../services/mailing/mailing-service\";\n\n@Component({\n  selector: \"app-content\",\n  templateUrl: \"./content.component.html\",\n  styleUrls: [\"./content.component.css\", \"bootstrap.min.css\"],\n})\nexport class ContentComponent implements OnInit {\n  public dataSet: any = [];\n  public country: string;\n  public selection: string;\n  public selection2: string;\n  public newCases: number = 0;\n  public newDeaths: number = 0;\n  public totalCases: number = 0;\n  public totalDeaths: number = 0;\n  public totalRecovered: number = 0;\n  public totalActiveCases: number = 0;\n\n  public message: string;\n  public email: string;\n\n  public floor(x: number): number {\n    return Math.floor(x);\n  }\n\n  public validateEmail(email: string) {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n  }\n\n  public addEmail() {\n    if (!this.validateEmail(this.email)) {\n      this.message = \"Your email address is not valid !\";\n    } else {\n      //addingEmail\n      this.mailingService.addEmail(this.email);\n      this.message = \"email \" + this.email + \" added successfully !\";\n      this.email = \"\";\n    }\n  }\n\n  constructor(\n    private service: DataService,\n    private mailingService: MailingService\n  ) {}\n\n  ngOnInit(): void {\n    this.service.getData().subscribe((v) => {\n      for (let val in v) {\n        if (v[val].country_name !== \"\") this.dataSet.push(v[val]);\n        this.newCases +=\n          v[val].new_cases.split(\",\").join(\"\") === \"N/A\"\n            ? 0\n            : parseInt(v[val].new_cases.split(\",\").join(\"\"));\n        this.newDeaths +=\n          v[val].new_deaths.split(\",\").join(\"\") === \"N/A\"\n            ? 0\n            : parseInt(v[val].new_deaths.split(\",\").join(\"\"));\n        this.totalCases +=\n          v[val].cases.split(\",\").join(\"\") === \"N/A\"\n            ? 0\n            : parseInt(v[val].cases.split(\",\").join(\"\"));\n        this.totalDeaths +=\n          v[val].deaths.split(\",\").join(\"\") === \"N/A\"\n            ? 0\n            : parseInt(v[val].deaths.split(\",\").join(\"\"));\n        this.totalRecovered +=\n          v[val].total_recovered.split(\",\").join(\"\") === \"N/A\"\n            ? 0\n            : parseInt(v[val].total_recovered.split(\",\").join(\"\"));\n        this.totalActiveCases +=\n          v[val].active_cases.split(\",\").join(\"\") === \"N/A\"\n            ? 0\n            : parseInt(v[val].active_cases.split(\",\").join(\"\"));\n      }\n    });\n  }\n}\n","<!-- Navigation -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">Covid-19 Real time statistics</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarResponsive\"\n      aria-controls=\"navbarResponsive\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </div>\n</nav>\n\n<!-- Page Content -->\n<div class=\"container w-100\" style=\"min-width: 90%;\">\n  <!-- Heading Row -->\n  <div class=\"row align-items-center my-5\">\n    <!-- /.col-lg-8 -->\n    <div class=\"col-lg-4\">\n      <img\n        class=\"img-fluid rounded mb-4 mb-lg-0\"\n        src=\"https://covid19.columbia.edu/sites/default/files/styles/cu_crop/public/content/covid-19/covid-19%20virus.jpeg?itok=OTa0CIKc\"\n        alt=\"\"\n      />\n    </div>\n    <div class=\"col-lg-5\">\n      <div class=\"form-group\">\n        <br />\n        <label for=\"exampleInputEmail1\"\n          >Subscribe to receive news every hour</label\n        >\n        <input\n          type=\"email\"\n          [(ngModel)]=\"email\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter email\"\n        />\n        <small id=\"emailHelp\" class=\"form-text text-muted\"\n          >We'll never share your email with anyone else.</small\n        >\n        <div>\n          <span\n            style=\"color: red;\"\n            *ngIf=\"message == 'Your email address is not valid !'\"\n            ><em>{{ message }}</em></span\n          >\n          <span style=\"color: green;\" *ngIf=\"message != 'Well done!'\"\n            ><em>{{ message }}</em></span\n          >\n        </div>\n      </div>\n      <button type=\"submit\" (click)=\"addEmail()\" class=\"btn btn-primary\">\n        Submit\n      </button>\n\n      <!-- /.col-md-4 -->\n    </div>\n\n    <!-- /.row -->\n\n    <!-- Content Row -->\n    <div class=\"row\">\n      <br />\n      <hr />\n\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th scope=\"col\">New Cases</th>\n              <th scope=\"col\">New Deaths</th>\n              <th scope=\"col\">Total Cases</th>\n              <th scope=\"col\">Total Active Cases</th>\n              <th scope=\"col\">Total Deaths</th>\n              <th scope=\"col\">Total Recovered</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td data-label=\"New Cases\">\n                <strong style=\"color: green;\"> {{ newCases }}</strong>\n              </td>\n              <td data-label=\"New Deaths\">\n                <strong style=\"color: red;\"> {{ newDeaths }}</strong>\n              </td>\n              <td data-label=\"Total Cases\">\n                <strong style=\"color: blue;\"> {{ totalCases }}</strong>\n              </td>\n              <td data-label=\"Total Active Cases\">\n                <strong style=\"color: rgb(128, 112, 128);\">\n                  {{ totalActiveCases }}</strong\n                >\n              </td>\n              <td data-label=\"Total Deaths\">\n                <strong style=\"color: grey;\"> {{ totalDeaths }}</strong>\n              </td>\n              <td data-label=\"Total Recovered\">\n                <strong style=\"color: tomato;\"> {{ totalRecovered }}</strong>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <table>\n          <tr>\n            <td>\n              <p>\n                Filter by country :\n                <input class=\"form-control\" [(ngModel)]=\"country\" />\n              </p>\n            </td>\n            <td>\n              <p>\n                Filter increasing :\n                <select\n                  class=\"form-control\"\n                  name=\"selection\"\n                  [(ngModel)]=\"selection\"\n                >\n                  <option value=\"confirmed\"\n                    >Filter by increasing confirmed cases :</option\n                  >\n                  <option value=\"deaths\">Filter by increasing deaths :</option>\n                  <option value=\"recovered\"\n                    >Filter by increasing recovered :</option\n                  >\n                </select>\n              </p>\n            </td>\n            <td>\n              <p>\n                Filter decreasing :\n                <select\n                  class=\"form-control\"\n                  name=\"selection2\"\n                  [(ngModel)]=\"selection2\"\n                >\n                  <option value=\"confirmed\"\n                    >Filter by decreasing confirmed cases :</option\n                  >\n                  <option value=\"deaths\">Filter by decreasing deaths :</option>\n                  <option value=\"recovered\"\n                    >Filter by decreasing recovered :</option\n                  >\n                </select>\n              </p>\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th scope=\"col\">Country</th>\n            <th scope=\"col\">Confirmed</th>\n            <th scope=\"col\">Active Cases</th>\n            <th scope=\"col\">Deaths</th>\n            <th scope=\"col\">Recovered</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"\n              let data of dataSet\n                | filterCountry: country\n                | filterInc: selection\n                | filterDec: selection2\n            \"\n          >\n            <td data-label=\"Country\">{{ data.country_name }}</td>\n\n            <td data-label=\"Confirmed\">\n              {{ data.cases\n              }}<span style=\"color: red;\"> (+{{ data.new_cases }})</span\n              ><span style=\"color: violet;\">\n                ({{\n                  floor(\n                    ((data.cases.split(\",\").join(\"\") * 100) / totalCases) * 100\n                  ) / 100\n                }}% of total cases)</span\n              >\n            </td>\n\n            <td data-label=\"Active Cases\">\n              {{ data.active_cases\n              }}<span style=\"color: violet;\">\n                ({{\n                  floor(\n                    ((data.active_cases.split(\",\").join(\"\") * 100) /\n                      totalActiveCases) *\n                      100\n                  ) / 100\n                }}% of total active cases)</span\n              >\n            </td>\n\n            <td data-label=\"Deaths\">\n              {{ data.deaths\n              }}<span style=\"color: red;\"> (+{{ data.new_deaths }})</span\n              ><span style=\"color: violet;\">\n                ({{\n                  floor(\n                    ((data.deaths.split(\",\").join(\"\") * 100) / totalDeaths) *\n                      100\n                  ) / 100\n                }}% of total deaths)</span\n              >\n            </td>\n\n            <td data-label=\"Recovered\">\n              {{ data.total_recovered }}\n              <span style=\"color: teal;\">\n                ({{\n                  floor(\n                    ((data.total_recovered.split(\",\").join(\"\") * 100) /\n                      data.cases.split(\",\").join(\"\")) *\n                      100\n                  ) / 100\n                }}% of confirmed cases)</span\n              >\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container -->\n\n  <!-- Footer -->\n  <footer class=\"py-3 bg-dark fixed-bottom\">\n    <div class=\"container\">\n      <p class=\"m-0 text-center text-white\">\n        <em\n          >Made with patience by\n          <a\n            style=\"text-decoration: none; color: #dddddd;\"\n            href=\"https://www.linkedin.com/in/zakaria-maaraki/\"\n            ><strong>Maaraki Zakaria</strong></a\n          ></em\n        >\n      </p>\n    </div>\n    <!-- /.container -->\n  </footer>\n\n  <style>\n    body {\n      font-family: \"Open Sans\", sans-serif;\n      line-height: 1.25;\n    }\n\n    table {\n      border: 1px solid #ccc;\n      border-collapse: collapse;\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      table-layout: fixed;\n    }\n\n    table caption {\n      font-size: 1.5em;\n      margin: 0.5em 0 0.75em;\n    }\n\n    table tr {\n      background-color: #f8f8f8;\n      border: 1px solid #ddd;\n      padding: 0.35em;\n    }\n\n    table th,\n    table td {\n      padding: 0.625em;\n      text-align: center;\n    }\n\n    table th {\n      font-size: 0.85em;\n      letter-spacing: 0.1em;\n      text-transform: uppercase;\n    }\n\n    @media screen and (max-width: 600px) {\n      table {\n        border: 0;\n      }\n\n      table caption {\n        font-size: 1.3em;\n      }\n\n      table thead {\n        border: none;\n        clip: rect(0 0 0 0);\n        height: 1px;\n        margin: -1px;\n        overflow: hidden;\n        padding: 0;\n        position: absolute;\n        width: 1px;\n      }\n\n      table tr {\n        border-bottom: 3px solid #ddd;\n        display: block;\n        margin-bottom: 0.625em;\n      }\n\n      table td {\n        border-bottom: 1px solid #ddd;\n        display: block;\n        font-size: 0.8em;\n        text-align: right;\n      }\n\n      table td::before {\n        /*\n    * aria-label has no advantage, it won't be read inside a table\n    content: attr(aria-label);\n    */\n        content: attr(data-label);\n        float: left;\n        font-weight: bold;\n        text-transform: uppercase;\n      }\n\n      table td:last-child {\n        border-bottom: 0;\n      }\n    }\n  </style>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n\n  public getData(): Observable<any>{\n    \n    return Observable.create(observer=>{\n      let myHeaders = new Headers({\n        \"Content-Type\": \"text/plain\",\n        \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"6356e62fc7msh27272757a761a13p18e27cjsn8d58dbbf0f26\",\n      });\n      \n      \n      let myRequest = new Request('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n        { method: 'GET',\n          headers: myHeaders,\n          mode: 'cors',\n          cache: 'default'\n        }\n      );\n\n      \n      fetch(myRequest)\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(data);\n        observer.next(data.countries_stat);\n        observer.complete();\n      })\n      .catch(function(err) {\n        // Error :(\n      });\n    });\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailingService {\n\n  constructor() {}\n\n  public addEmail(email: string){\n    fetch('http://ec2-18-222-10-165.us-east-2.compute.amazonaws.com/api/addUser?email='+email, {\n        mode: 'no-cors',\n        method:'GET',\n        headers: {\n        'Accept': '*/*',\n        }\n      });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'deaths'\n})\nexport class DeathsPipe implements PipeTransform {\n\n  transform(items: any[], deaths: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    items.sort((a,b)=>a.deaths-b.deaths);\n    return items;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterCountry'\n})\nexport class FilterCountryPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items || !filter) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    return items.filter(item => {return item.country_name.toLowerCase().includes(filter.toLowerCase())});\n  }\n\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"filterDec\",\n})\nexport class FilterDecPipe implements PipeTransform {\n  transform(items: any[], filter: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n\n    if (filter === \"confirmed\")\n      items.sort(\n        (b, a) =>\n          parseInt(a.cases.split(\",\").join(\"\")) -\n          parseInt(b.cases.split(\",\").join(\"\"))\n      );\n    else if (filter === \"deaths\")\n      items.sort(\n        (b, a) =>\n          parseInt(a.deaths.split(\",\").join(\"\")) -\n          parseInt(b.deaths.split(\",\").join(\"\"))\n      );\n    else\n      items.sort(\n        (b, a) =>\n          parseInt(a.total_recovered.split(\",\").join(\"\")) -\n          parseInt(b.total_recovered.split(\",\").join(\"\"))\n      );\n    return items;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"filterInc\",\n})\nexport class FilterIncPipe implements PipeTransform {\n  transform(items: any[], filter: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n\n    if (filter === \"confirmed\")\n      items.sort(\n        (a, b) =>\n          parseInt(a.cases.split(\",\").join(\"\")) -\n          parseInt(b.cases.split(\",\").join(\"\"))\n      );\n    else if (filter === \"deaths\")\n      items.sort(\n        (a, b) =>\n          parseInt(a.deaths.replace(\",\", \"\")) -\n          parseInt(b.deaths.replace(\",\", \"\"))\n      );\n    else\n      items.sort(\n        (a, b) =>\n          parseInt(a.total_recovered.replace(\",\", \"\")) -\n          parseInt(b.total_recovered.replace(\",\", \"\"))\n      );\n    return items;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}