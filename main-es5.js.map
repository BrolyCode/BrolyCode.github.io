{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/content/content.component.ts","webpack:///src/app/content/content.component.html","webpack:///src/app/content/services/data-service.ts","webpack:///src/app/content/services/filter-country.pipe.ts","webpack:///src/app/deaths.pipe.ts","webpack:///src/app/filter-confirmed.pipe.ts","webpack:///src/app/recovered.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContentComponent","service","dataSet","newCases","newDeaths","totalCases","totalDeaths","x","Math","floor","getData","subscribe","v","val","push","parseInt","new_cases","replace","new_deaths","cases","deaths","console","log","DataService","create","observer","myHeaders","Headers","myRequest","Request","method","headers","mode","cache","fetch","response","json","data","next","countries_stat","complete","err","providedIn","FilterCountryPipe","items","filter","item","country_name","toLowerCase","includes","name","DeathsPipe","sort","a","b","FilterConfirmedPipe","total_recovered","RecoveredPipe","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid';\n}\n","<app-content></app-content>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/content.component';\nimport { FilterCountryPipe } from './content/services/filter-country.pipe';\nimport { FilterConfirmedPipe } from './filter-confirmed.pipe';\nimport { DeathsPipe } from './deaths.pipe';\nimport { RecoveredPipe } from './recovered.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    FilterCountryPipe,\n    FilterConfirmedPipe,\n    DeathsPipe,\n    RecoveredPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './services/data-service'\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  public dataSet: any=[];\n  public country: string;\n  public selection: string;\n  public selection2: string;\n  public newCases: number=0;\n  public newDeaths: number=0;\n  public totalCases: number=0;\n  public totalDeaths: number=0;\n  public floor(x: number): number{\n    return Math.floor(x);\n  }\n\n  constructor(private service: DataService) { }\n\n  ngOnInit(): void {\n    this.service.getData().subscribe(v => {\n      for(let val in v){\n        this.dataSet.push(v[val]); \n        this.newCases+=parseInt(v[val].new_cases.replace(\",\",\"\"));\n        this.newDeaths+=parseInt(v[val].new_deaths.replace(\",\",\"\"));\n        this.totalCases+=parseInt(v[val].cases.replace(\",\",\"\"));\n        this.totalDeaths+=parseInt(v[val].deaths.replace(\",\",\"\"));\n      } \n    });\n    console.log(this.dataSet);\n  }\n\n}\n","\n  <div>\n      <h1 style=\"margin-left:40%;\"><span style=\"color:red\">Covid-19 Real time statistics</span></h1>\n      <p>Filter by country : <input [(ngModel)]=\"country\" /></p>\n      <p>\n          Filter increasing : <select name=\"selection\" [(ngModel)]=\"selection\">\n              <option value=\"confirmed\">Filter by increasing confirmed cases :</option>\n              <option value=\"deaths\">Filter by increasing deaths :</option>\n              <option value=\"recovered\">Filter by increasing recovered :</option>\n          </select>\n      </p>\n      <p>\n          Filter decreasing : <select name=\"selection2\" [(ngModel)]=\"selection2\">\n              <option value=\"confirmed\">Filter by decreasing confirmed cases :</option>\n              <option value=\"deaths\">Filter by decreasing deaths :</option>\n              <option value=\"recovered\">Filter by decreasing recovered :</option>\n          </select>\n      </p>    \n  </div>\n  \n\n\n<style>\n    body {\n  font-family: \"Open Sans\", sans-serif;\n  line-height: 1.25;\n}\n\ntable {\n  border: 1px solid #ccc;\n  border-collapse: collapse;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  table-layout: fixed;\n}\n\ntable caption {\n  font-size: 1.5em;\n  margin: .5em 0 .75em;\n}\n\ntable tr {\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n  padding: .35em;\n}\n\ntable th,\ntable td {\n  padding: .625em;\n  text-align: center;\n}\n\ntable th {\n  font-size: .85em;\n  letter-spacing: .1em;\n  text-transform: uppercase;\n}\n\n@media screen and (max-width: 600px) {\n  table {\n    border: 0;\n  }\n\n  table caption {\n    font-size: 1.3em;\n  }\n  \n  table thead {\n    border: none;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n  \n  table tr {\n    border-bottom: 3px solid #ddd;\n    display: block;\n    margin-bottom: .625em;\n  }\n  \n  table td {\n    border-bottom: 1px solid #ddd;\n    display: block;\n    font-size: .8em;\n    text-align: right;\n  }\n  \n  table td::before {\n    /*\n    * aria-label has no advantage, it won't be read inside a table\n    content: attr(aria-label);\n    */\n    content: attr(data-label);\n    float: left;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n  \n  table td:last-child {\n    border-bottom: 0;\n  }\n}\n\n</style>\n\n<table>\n  \n    <caption>\n      Made with patience by <strong>Maaraki Zakaria</strong>\n      <div>\n        <p style=\"color:green\"><strong>New Cases : {{newCases}}</strong></p>\n        <p style=\"color:red\"><strong>New Deaths : {{newDeaths}}</strong></p>\n        <p style=\"color:blue\"><strong>Total Cases : {{totalCases}}</strong></p>\n        <p style=\"color:grey\"><strong>Total Deaths : {{totalDeaths}}</strong></p>\n      </div>\n    </caption>\n    <thead>\n      <tr>\n        <th scope=\"col\">Country</th>\n        <th scope=\"col\">Confirmed</th>\n        <th scope=\"col\">Deaths</th>\n        <th scope=\"col\">Recovered</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let data of dataSet | filterCountry : country | filterConfirmed : selection | recovered : selection2\">\n        <td data-label=\"Country\">{{data.country_name}}</td>\n        \n        <td  data-label=\"Confirmed\">{{data.cases}}<span style=\"color:red\"> (+{{data.new_cases}})</span><span style=\"color:violet\"> ({{floor(data.cases.replace(\",\",\"\")/totalCases*100)}}% of total cases)</span></td>\n\n        <td  data-label=\"Deaths\">{{data.deaths}}<span style=\"color: red\"> (+{{data.new_deaths}})</span><span style=\"color:violet\"> ({{floor(data.deaths.replace(\",\",\"\")/totalDeaths*100)}}% of total deaths)</span></td>\n\n        <td  data-label=\"Recovered\">{{data.total_recovered}}</td>\n      </tr>\n    </tbody>\n  </table>\n\n\n","import { Injectable } from '@angular/core';\nimport {Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n\n  public getData(): Observable<any>{\n    \n    return Observable.create(observer=>{\n      let myHeaders = new Headers({\n        \"Content-Type\": \"text/plain\",\n        \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"6356e62fc7msh27272757a761a13p18e27cjsn8d58dbbf0f26\",\n      });\n      \n      \n      let myRequest = new Request('https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n        { method: 'GET',\n          headers: myHeaders,\n          mode: 'cors',\n          cache: 'default'\n        }\n      );\n\n      \n      fetch(myRequest)\n      .then(response=>response.json())\n      .then(data=>{\n        observer.next(data.countries_stat);\n        observer.complete();\n      })\n      .catch(function(err) {\n        // Error :(\n      });\n    });\n    \n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterCountry'\n})\nexport class FilterCountryPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items || !filter) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    return items.filter(item => {return item.country_name.toLowerCase().includes(filter.toLowerCase())});\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'deaths'\n})\nexport class DeathsPipe implements PipeTransform {\n\n  transform(items: any[], deaths: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    items.sort((a,b)=>a.deaths-b.deaths);\n    return items;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterConfirmed'\n})\nexport class FilterConfirmedPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    if(filter===\"confirmed\")items.sort((a,b)=>parseInt(a.cases.replace(\",\",\"\"))-parseInt(b.cases.replace(\",\",\"\")));\n    else if(filter===\"deaths\")items.sort((a,b)=>parseInt(a.deaths.replace(\",\",\"\"))-parseInt(b.deaths.replace(\",\",\"\")));\n    else items.sort((a,b)=>parseInt(a.total_recovered.replace(\",\",\"\"))-parseInt(b.total_recovered.replace(\",\",\"\")));\n    return items;\n  }\n\n}\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recovered'\n})\nexport class RecoveredPipe implements PipeTransform {\n\n  transform(items: any[], filter: string): any {\n    if (!items) {\n      return items;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    \n    if(filter===\"confirmed\")items.sort((b,a)=>parseInt(a.cases.replace(\",\",\"\"))-parseInt(b.cases.replace(\",\",\"\")));\n    else if(filter===\"deaths\")items.sort((b,a)=>parseInt(a.deaths.replace(\",\",\"\"))-parseInt(b.deaths.replace(\",\",\"\")));\n    else items.sort((b,a)=>parseInt(a.total_recovered.replace(\",\",\"\"))-parseInt(b.total_recovered.replace(\",\",\"\")));\n    return items;\n  }   \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}